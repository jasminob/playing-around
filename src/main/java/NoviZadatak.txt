Prosiriti program sa sljedecim:


- Zadaca 18.10.2018.
 * Student postaje abstract class
 * Student dobiva abstract metodu getCiklus(), vraca int
 * StudentBachelor nasljedjuje Studenta, ciklus 1
 * StudentMaster nasljedjuje Studenta, ciklus 2
 * svugdje gdje instanciras Studenta, uradi selekciju ciklusa i instanciraj odgovarajucu podklasu
 * pri ispisu Studenta, treba dodati podatak (kao string, odnosno tekstualna informacija "master" ili "bachelor")
 * obrisati student factory
 * u klasi Student, napraviti factory method koja instancira studenta datog ciklusa
 * napraviti interfejs Saveable, sa metodama:
   - String save();
   - void load(String saved);
 

- Zadaca:
 * handle sve slucajeve kada treba korisnik da izabere, da li je izbor ispravan.
 * za sve slucajeve kada treba korisnik da izabere, napraviti funkciju UI koja odradi ispis i odabir
 * za sve funkcije koje rade odabir, paziti prije njihovog poziva da li ima ista izabrati (npr ne treba traziti obavezni unos fakulteta ako nema ni jednog fakulteta)
 * ne alocirati nove objekte pri odabiru postojecih, vec koristiti odabrane objekte
 * ispisi sve odsijeke kada trazis da izaberem odsijek
 * popraviti upis studenta na predmet
 * popraviti ispis svih studenata na odsijeku (trenutno ispise sviju na fakultetu)





Napraviti glavni menu:

1. Kreiranje novog Fakulteta
   - pita za potrebne informacije, pa kreira i ubaci u globalni niz fakulteta
2. Kreiranje novog odsijeka
   - prije svega trazi odabir fakulteta od vec unesenih, pa onda trazi informacije odsijeka, pa onda ubaci odsijek u odabrani fakultet
3. Kreiranje novog studenta
   - prije svega trazi odabir fakulteta od vec unesenih, pa pita za potrebne informacije, pa kreira i ubaci u fakultet
4. Kreiranje novog predmeta
   - prije svega trazi odabir fakulteta od vec unesenih, pa pita za odabir odsjeka, pa pita za potrebne informacije, pa kreira i ubaci u odsijek
5. Upis studenta na predmet
   - prije svega trazi odabir fakulteta od vec unesenih, pa onda trazi indeks studenta koji se upisuje
     pa ukoliko student sa unesenim indeksom ne postoji, prekida i vraca na glavni meni
     ukoliko postoji, trazi odabir predmeta koje student nije do sada slusao, i upisuje student na odabrani predmet
6. Brisanje studenta
   - trazi izbor fakulteta, ispisuje sve studente, pa brise odabranog studenta (ne unosi indeks, nego unosi redni broj, kao glavni meni ispisuje sve studente)
7. Brisanje odsijeka
   - trazi izbor fakulteta, ispisuje svaki odsijek kao glavni meni, pa korisnik odabere koji ce se brisati
8. Brisanje predmeta
   - trazi izbor fakulteta, izbor odsijeka, izbor predmeta na odsijeku, pa obrise odabrani
9. Brisanje fakulteta
   - trazi izbor fakulteta, i brise ga
10. Ispis svih fakulteta
   - samo ispise listu fakulteta ( N. Fakultet )
11. Ispis detalja jednog fakulteta
   - ispise kao pod (10), ali ispod svakog fakulteta ispise svaki odsijek, npr:
        Elektrotehnicki Fakultet Sarajevo
            - Racunarstvo i Informatika
            - Telekomunikacije
            - Automatika i Elektronika
            - Energetika
12. Ispis svih studenata na odsijeku
    - trazi izbor fakulteta, izbor odsijeka, pa ispisuje sve studente na tom odsijeku (bez duplikata, s tim da se kao duplikat smatra isti broj indeksa)
13. Ispis svih predmeta na odsijeku
    - trazi izbor fakulteta, izbor odsijeka, pa ispisuje sve predmete na tom odsijeku
14. Ispis svih studenata na predmetu
    - trazi izbor fakulteta, izbor odsijeka, izbor predmeta, pa ispisuje sve studente na tom predmetu (bez duplikata, s tim da se kao duplikat smatra isti broj indeksa)
15. Izlaz
    - zatvara aplikaciju
